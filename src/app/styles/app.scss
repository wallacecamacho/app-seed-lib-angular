// Define a mixin that accepts a theme and outputs the color styles for the component.
@mixin candy-color-theme($theme) {
  // Extract whichever individual palettes you need from the theme.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  footer {
    background: mat-color($accent);
    padding: 10px;
  }
}

body {
  font-family: $font-family;

  * {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .all-wrap {
    min-height: 100vh;
  }

  .page-wrap {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .mat-drawer {
    min-width: 20vw;

    .mat-button {
      width: 100%;
      position: relative;
      bottom: 0;
      margin: 24px 0;
    }
  }

  .app-content {
    padding: 32px;
    box-sizing: border-box;
    flex: 1;
    h1 {
      display: inline-block;
      font-size: 24px;
      font-weight: 500;
      margin: 8px 0px;
    }

    h1:after {
      content: "";
      display: block;
      height: 1px;
      width: 40%;
      margin: 24px 0px 10px;
      background: $lightgray;
      clear: both;
    }
  }

  .mat-toolbar {
    .mat-icon {
      cursor: pointer;
    }

    .app-toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-left: 24px;
      margin-right: 8px;

      @media ($xsmall) {
        margin-left: 16px;
        margin-right: 0px;
      }
    }

    .app-toolbar-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-left: 64px;
      margin-right: 8px;

      @media ($xsmall) {
        margin-left: 56px;
        margin-right: 0px;
      }
    }
  }

  h1 {
    font-size: 20px;
  }

  .fill-remaining-space {
    flex: 1 1 auto;
  }
}

.active-link {
  .mat-list-item-content {
    color: $blue;
  }
}

.has-error {
  color: $brightred;
}

/*
 * Make the Component injected by Router Outlet full height:
 */
main {
  display: flex;
  flex-direction: column;
  > *:not(router-outlet) {
    flex: 1;
    display: block;
  }
}
